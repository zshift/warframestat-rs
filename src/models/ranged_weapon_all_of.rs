/*
 * WarframeStat.us API
 *
 * Simple API for data from the game Warframe. [Parser Docs](https://wfcd.github.io/warframe-worldstate-parser/) [Items Types](https://github.com/WFCD/warframe-items/blob/master/index.d.ts) 
 *
 * The version of the OpenAPI document: living
 * Contact: tobiah@protonmail.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct RangedWeaponAllOf {
    #[serde(rename = "accuracy", skip_serializing_if = "Option::is_none")]
    pub accuracy: Option<f32>,
    #[serde(rename = "ammo", skip_serializing_if = "Option::is_none")]
    pub ammo: Option<f32>,
    #[serde(rename = "fireRate", skip_serializing_if = "Option::is_none")]
    pub fire_rate: Option<f32>,
    #[serde(rename = "magazineSize", skip_serializing_if = "Option::is_none")]
    pub magazine_size: Option<i32>,
    #[serde(rename = "multishot", skip_serializing_if = "Option::is_none")]
    pub multishot: Option<f32>,
    #[serde(rename = "noise", skip_serializing_if = "Option::is_none")]
    pub noise: Option<String>,
    #[serde(rename = "trigger", skip_serializing_if = "Option::is_none")]
    pub trigger: Option<String>,
}

impl RangedWeaponAllOf {
    pub fn new() -> RangedWeaponAllOf {
        RangedWeaponAllOf {
            accuracy: None,
            ammo: None,
            fire_rate: None,
            magazine_size: None,
            multishot: None,
            noise: None,
            trigger: None,
        }
    }
}


