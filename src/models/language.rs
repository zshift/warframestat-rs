/*
 * WarframeStat.us API
 *
 * Simple API for data from the game Warframe. [Parser Docs](https://wfcd.github.io/warframe-worldstate-parser/) [Items Types](https://github.com/WFCD/warframe-items/blob/master/index.d.ts) 
 *
 * The version of the OpenAPI document: living
 * Contact: tobiah@protonmail.com
 * Generated by: https://openapi-generator.tech
 */


/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Language {
    #[serde(rename = "de")]
    De,
    #[serde(rename = "es")]
    Es,
    #[serde(rename = "fr")]
    Fr,
    #[serde(rename = "it")]
    It,
    #[serde(rename = "ko")]
    Ko,
    #[serde(rename = "pl")]
    Pl,
    #[serde(rename = "pt")]
    Pt,
    #[serde(rename = "ru")]
    Ru,
    #[serde(rename = "zh")]
    Zh,
    #[serde(rename = "en")]
    En,

}

impl ToString for Language {
    fn to_string(&self) -> String {
        match self {
            Self::De => String::from("de"),
            Self::Es => String::from("es"),
            Self::Fr => String::from("fr"),
            Self::It => String::from("it"),
            Self::Ko => String::from("ko"),
            Self::Pl => String::from("pl"),
            Self::Pt => String::from("pt"),
            Self::Ru => String::from("ru"),
            Self::Zh => String::from("zh"),
            Self::En => String::from("en"),
        }
    }
}

impl Default for Language {
    fn default() -> Language {
        Self::De
    }
}




