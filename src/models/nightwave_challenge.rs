/*
 * WarframeStat.us API
 *
 * Simple API for data from the game Warframe. [Parser Docs](https://wfcd.github.io/warframe-worldstate-parser/) [Items Types](https://github.com/WFCD/warframe-items/blob/master/index.d.ts) 
 *
 * The version of the OpenAPI document: living
 * Contact: tobiah@protonmail.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct NightwaveChallenge {
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    #[serde(rename = "activation", skip_serializing_if = "Option::is_none")]
    pub activation: Option<String>,
    #[serde(rename = "expiry", skip_serializing_if = "Option::is_none")]
    pub expiry: Option<String>,
    #[serde(rename = "isDaily", skip_serializing_if = "Option::is_none")]
    pub is_daily: Option<bool>,
    #[serde(rename = "isElite", skip_serializing_if = "Option::is_none")]
    pub is_elite: Option<bool>,
    #[serde(rename = "title", skip_serializing_if = "Option::is_none")]
    pub title: Option<String>,
    #[serde(rename = "desc", skip_serializing_if = "Option::is_none")]
    pub desc: Option<String>,
    #[serde(rename = "reputation", skip_serializing_if = "Option::is_none")]
    pub reputation: Option<f32>,
}

impl NightwaveChallenge {
    pub fn new() -> NightwaveChallenge {
        NightwaveChallenge {
            id: None,
            activation: None,
            expiry: None,
            is_daily: None,
            is_elite: None,
            title: None,
            desc: None,
            reputation: None,
        }
    }
}


