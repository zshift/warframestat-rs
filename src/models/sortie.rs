/*
 * WarframeStat.us API
 *
 * Simple API for data from the game Warframe. [Parser Docs](https://wfcd.github.io/warframe-worldstate-parser/) [Items Types](https://github.com/WFCD/warframe-items/blob/master/index.d.ts) 
 *
 * The version of the OpenAPI document: living
 * Contact: tobiah@protonmail.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct Sortie {
    /// unique identifier for this object/event/thing
    #[serde(rename = "id")]
    pub id: String,
    /// ISO-8601 formatted timestamp for when the event began
    #[serde(rename = "activation")]
    pub activation: String,
    /// ISO-8601 formatted timestamp for when the event is expected to end
    #[serde(rename = "expiry")]
    pub expiry: String,
    #[serde(rename = "rewardPool")]
    pub reward_pool: String,
    #[serde(rename = "variants")]
    pub variants: Vec<crate::models::SortieAllOfVariants>,
    #[serde(rename = "boss")]
    pub boss: String,
    #[serde(rename = "faction")]
    pub faction: String,
    #[serde(rename = "expired")]
    pub expired: bool,
    #[serde(rename = "eta")]
    pub eta: String,
}

impl Sortie {
    pub fn new(id: String, activation: String, expiry: String, reward_pool: String, variants: Vec<crate::models::SortieAllOfVariants>, boss: String, faction: String, expired: bool, eta: String) -> Sortie {
        Sortie {
            id,
            activation,
            expiry,
            reward_pool,
            variants,
            boss,
            faction,
            expired,
            eta,
        }
    }
}


