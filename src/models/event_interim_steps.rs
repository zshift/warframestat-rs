/*
 * WarframeStat.us API
 *
 * Simple API for data from the game Warframe. [Parser Docs](https://wfcd.github.io/warframe-worldstate-parser/) [Items Types](https://github.com/WFCD/warframe-items/blob/master/index.d.ts) 
 *
 * The version of the OpenAPI document: living
 * Contact: tobiah@protonmail.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct EventInterimSteps {
    /// Score to each to achieve this step
    #[serde(rename = "goal", skip_serializing_if = "Option::is_none")]
    pub goal: Option<f32>,
    #[serde(rename = "reward", skip_serializing_if = "Option::is_none")]
    pub reward: Option<Box<crate::models::Reward>>,
    #[serde(rename = "message", skip_serializing_if = "Option::is_none")]
    pub message: Option<Box<crate::models::EventMessage>>,
    /// Suspected to be the number of persons who have completed this step.
    #[serde(rename = "winnerCount", skip_serializing_if = "Option::is_none")]
    pub winner_count: Option<f32>,
}

impl EventInterimSteps {
    pub fn new() -> EventInterimSteps {
        EventInterimSteps {
            goal: None,
            reward: None,
            message: None,
            winner_count: None,
        }
    }
}


