/*
 * WarframeStat.us API
 *
 * Simple API for data from the game Warframe. [Parser Docs](https://wfcd.github.io/warframe-worldstate-parser/) [Items Types](https://github.com/WFCD/warframe-items/blob/master/index.d.ts) 
 *
 * The version of the OpenAPI document: living
 * Contact: tobiah@protonmail.com
 * Generated by: https://openapi-generator.tech
 */


/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Polarity {
    #[serde(rename = "Vazarin")]
    Vazarin,
    #[serde(rename = "Madurai")]
    Madurai,
    #[serde(rename = "Naramon")]
    Naramon,
    #[serde(rename = "Zenurik")]
    Zenurik,
    #[serde(rename = "Unairu")]
    Unairu,
    #[serde(rename = "Penjaga")]
    Penjaga,
    #[serde(rename = "Unbra")]
    Unbra,

}

impl ToString for Polarity {
    fn to_string(&self) -> String {
        match self {
            Self::Vazarin => String::from("Vazarin"),
            Self::Madurai => String::from("Madurai"),
            Self::Naramon => String::from("Naramon"),
            Self::Zenurik => String::from("Zenurik"),
            Self::Unairu => String::from("Unairu"),
            Self::Penjaga => String::from("Penjaga"),
            Self::Unbra => String::from("Unbra"),
        }
    }
}

impl Default for Polarity {
    fn default() -> Polarity {
        Self::Vazarin
    }
}




